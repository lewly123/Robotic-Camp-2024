import{initializeApp as L}from"https://www.gstatic.com/firebasejs/10.13.2/firebase-app.js";import{setPersistence as v,browserLocalPersistence as D,getAuth as g,createUserWithEmailAndPassword as S,signInWithEmailAndPassword as P,onAuthStateChanged as U,signOut as q}from"https://www.gstatic.com/firebasejs/10.13.2/firebase-auth.js";import{getFirestore as E,doc as I,setDoc as A,getDocs as N,where as O,query as R,collection as C,getDoc as M}from"https://www.gstatic.com/firebasejs/10.13.2/firebase-firestore.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const b={apiKey:"AIzaSyDh3WYkuVQ-Bwd_3mM3zHqQead-yjNbKPA",authDomain:"roboticcamp2024.firebaseapp.com",projectId:"roboticcamp2024",storageBucket:"roboticcamp2024.appspot.com",messagingSenderId:"96247026145",appId:"1:96247026145:web:cda297740ea82f117202a0"};console.log(b);L(b);function p(n,o){console.log(n)}function w(n){const o=document.getElementById("loginButton"),s=document.querySelector(".dropdown"),r=document.querySelector(".name");if(!o||!s||!r){console.error("UI elements not found!");return}n&&typeof n=="object"?(o.style.display="none",s.style.display="inline-block",r.innerText=n.displayName||"User",localStorage.setItem("loggedInUserId",n.uid)):(o.style.display="block",s.style.display="none",r.innerText="",localStorage.removeItem("loggedInUserId"))}function x(n,o,s,r,e,t,c,l){n(o,c,l).then(d=>{const i=d.user,a={email:c,username:t,password:l},u=e(s,"users",i.uid);r(u,a).then(()=>{console.log("Success send data to docs")}).catch(m=>{console.error("Error writing document",m)})}).catch(d=>{const i=d.code,a=d.message;p(i==="auth/email-already-in-use"?"Email Address Already Exists!":a)})}async function k(n,o,s,r,e,t,c,l,d){try{await v(o,D);let i=l;if(!l.includes("@")){const m=r(s,"users"),B=e(m,t("username","==",l)),f=await c(B);if(!f.empty)i=f.docs[0].data().email,console.log("Resolved username to email:",i);else throw new Error("Username not found.")}const u=(await n(o,i,d)).user;w(u),console.log("User signed in:",u)}catch(i){console.error("Error signing in:",i.message)}}const y=g(),h=E();document.addEventListener("DOMContentLoaded",function(){document.getElementById("submitButtonRegister").addEventListener("click",function(s){s.preventDefault();const r=document.getElementById("userIdR").value,e=document.getElementById("emailR").value,t=document.getElementById("userPasswordR").value;x(S,y,h,A,I,r,e,t)}),document.getElementById("submitButtonLogin").addEventListener("click",function(s){s.preventDefault();const r=document.getElementById("userIdL").value,e=document.getElementById("userPasswordL").value;k(P,y,h,C,R,O,N,r,e)})});const j=g(),z=E();document.addEventListener("DOMContentLoaded",()=>{U(j,async n=>{const o=document.getElementById("loginButton"),s=document.querySelector(".dropdown"),r=document.querySelector(".name");if(document.querySelector(".email"),n){console.log("User is logged in:",n);const e=I(z,"users",n.uid),t=await M(e);if(t.exists()){const c=t.data();r.innerText=c.username||"Guest"}else console.log("No Firestore document found for user.");o.style.display="none",s.style.display="inline-block"}else console.log("No user is logged in."),o.style.display="block",s.style.display="none"})});console.log("2");document.addEventListener("DOMContentLoaded",()=>{const n=g(),o=document.getElementById("logoutButton");o?(console.log("3"),o.addEventListener("click",function(s){s.preventDefault(),console.log("1"),q(n).then(()=>{console.log("User successfully signed out."),localStorage.removeItem("loggedInUserId"),w(),window.location.href="https://roboticcamp2024.web.app/"}).catch(r=>{console.error("Error during logout: ",r.message)})})):console.error("Logout button not found.")});
